export zone=
curl -LO raw.githubusercontent.com/gcpsolution99/GCP-solution/refs/heads/main/GSP/GSP1076.sh

sudo chmod +x GSP1076.sh

./GSP1076.sh

Task 1. Prepare the lab environment
export PROJECT_ID=$(gcloud config get-value project)
export PROJECT_NUMBER=$(gcloud projects describe $PROJECT_ID --format='value(projectNumber)')
export REGION="REGION"
gcloud config set compute/region $REGION

gcloud services enable \
  cloudresourcemanager.googleapis.com \
  container.googleapis.com \
  artifactregistry.googleapis.com \
  containerregistry.googleapis.com \
  containerscanning.googleapis.com
git clone https://github.com/GoogleCloudPlatform/cloud-code-samples/
cd ~/cloud-code-samples
gcloud container clusters create container-dev-cluster --zone="ZONE"

ask 2. Working with container images
gcloud artifacts repositories create container-dev-repo --repository-format=docker \
  --location=$REGION \
  --description="Docker repository for Container Dev Workshop"

gcloud auth configure-docker "Filled in at lab start"-docker.pkg.dev

cd ~/cloud-code-samples/java/java-hello-world
docker build -t "REGION"-docker.pkg.dev/"PROJECT_ID"/container-dev-repo/java-hello-world:tag1 .
docker push "REGION"-docker.pkg.dev/"PROJECT_ID"/container-dev-repo/java-hello-world:tag1

ask 3. Integration with Cloud Code
cd ~/cloud-code-samples/
cloudshell workspace .

 cloud-code-samples/java/java-hello-world/skaffold.yaml and then dockerfile.
"REGION"-docker.pkg.dev/"PROJECT_ID"/container-dev-repo
 "It's running!" to "It's updated!"


gcloud artifacts repositories create container-dev-java-repo \
    --repository-format=maven \
    --location="REGION" \
    --description="Java package repository for Container Dev Workshop"
